
spring.main.banner-mode=off
server.compression.enabled=true

mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

spring.jpa.show-sql=true

#security.basic.enabled=false


#mybatis.config-location = classpath:mybatis/mybatis-config.xml11
#spring.datasource.schema=mybatis

#spring.datasource.test1.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.test1.url = jdbc:mysql://10.20.10.43:33006/de_limit?useUnicode=true&characterEncoding=utf-8
#spring.datasource.test1.username = dongkai
#spring.datasource.test1.password = dongkai123
#
#spring.datasource.test2.driverClassName = oracle.jdbc.driver.OracleDriver
#spring.datasource.test2.url = jdbc:oracle:thin:@10.20.10.165:1521:lms
#spring.datasource.test2.username = cmdev
#spring.datasource.test2.password = cmdev
#
#spring.datasource.test3.driverClassName = oracle.jdbc.driver.OracleDriver
#spring.datasource.test3.url = jdbc:oracle:thin:@10.20.10.117:1521:ORCL
#spring.datasource.test3.username = dafydev
#spring.datasource.test3.password = D7lKhI2fyo


#logging.level.root =
logging.level.com.mysql = debug
logging.level.org.mybatis = debug
logging.level.com.ibatis = debug
#logging.level.com.lk = info
logging.path=D:\\work\\log
logging.file=D:\\work\\log\\spring-booooot.log
#logging.pattern.file=


logging.level.org.springframework.boot=DEBUG
logging.level.org.springboot.sample=TRACE



#server.error.path=/eeeeeeeeee
#server.error.whitelabel.enabled=false
#server.error.include-stacktrace=always
#server.error.path=/


server.tomcat.max-threads=100
#spring.profiles.active=dev





log4j.logger.com.ibatis=debug
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=debug
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=debug
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=debug

log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.PreparedStatement=debug,stdout 



#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://10.20.10.43:33006/de_limit?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=dongkai
#spring.datasource.password=dongkai123


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

spring.mvc.view.prefix=/jsps/
spring.mvc.view.suffix=.jsp
#spring.mvc.

security.user.password=123

spring.application.name=spirng-boot-rabbitmq

spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


